一、
需求分析的工作在通常包括以下七个方面：
(1)绘制系统上下文范围关系图：这种关系图是用于定义系统与系统外部实体的界限和接口的简单模型，它可以为需求确定一个范围。
(2)创建用户界面原型：用户界面对于一个系统来说是十分重要的，因此在需求分析阶段通过快速开发工具开发一个抛弃式原型，或者通过ppt,flash等演示工具制作一个演示原型，甚至是用纸鹤笔画出一些关键的界面接口示意图，将帮助用户更好地理解所要解决的问题，更好地理解系统。
(3)分析需求的可行性：对所有获得的需求进行成本、性能和技术实现方面的可行性研究，以及这些需求项是否与其他的需求项有冲突，是否有对外的依赖关系等。 
(4)确定需求的优先级：这是一项很重要的工作，迭代开发已经成为了现代软件工程的一个基础，而需求的优先级是制订迭代计划的一个最重要的依据。对于需求优先级的描述，可以采用满意度和不满意度指标进行说明。其中满意度表示当需求被实现时用户的满意程度，不满意度表示当需求未被实现时用户的不满意程度。
(5)为需求建立模型：也就是建立分析模型，这些模型的表现形式主要是图表加上少量的文字描述，所谓“一图抵千字”，图形化地描述需求将使得其更加清晰、易懂。根据采用的分析方法不同，采用的图也将不同。例如，OOA中的用例模型和领域模型，SA中的DFD和E-R图等。需求分析模型主要描述系统分析师理解系统，使需求分析任务更加容易实现。同时，它也是以后进行软件设计的基础，为软件设计提供了系统的表示视图。
(6)创建数据字典：数据字典是对系统用刀的所有数据项和结构进行定义，以确保开发人员使用了统一的数据定义。
(7)使用QFD:这是在需求优先级基础上的一个升华，其原理与满意度和不满意度指标十分接近，通过产品特性、属性与对用户的重要性联系起来。


第二题
1.表示集成
表示集成也称为界面集成，这是比较原始和最浅层次的集成，但又是常用的集成。这种方法把用户界面作为公共的集成点，把原来零散的系统界面集成中在一个新的界面中。
表示集成是黑盒集成，无需了解程序与数据库的内部构造。常用的集成技术主要有屏幕截取和输入模拟技术。表示集成通常应用于以下几种情况。

(1)在现有的基于终端的应用系统上配置基于pc的用户界面。
(2)为用户提供一个看上去统一，但是由多个系统组成的应用系统。
(3)当只有可能在显示界面上实现集成时，表示集成的实现是很简单的，也是很不彻底的，只是做了一层“外装修”，而额外多出来的集成界面也将可能成为系统的性能瓶颈。
2.数据集成
为了完成控制集成和业务流程集成，必须首先解决数据和数据库的集成问题。在集成之前，必须首先对于数据进行标识并编成目录，另外还要确定元数据模型，保证数据在数据库系统中分布和共享。因此，数据集成是白盒集成。
有很多不同的中间件工具可以用于数据集成。例如，批量文件传输，即以特定的或是预定的方式在原有系统和新开发的应用系统之间进行文件传输；用于访问不同类型数据库系统的ODBC标准接口；向分布式数据库提供连接的数据库访问中间件技术等。	
通常在以下情况下，将会使用数据集成：
(1)需要对多种信息源产生的数据进行综合分析和决策。
(2)要处理一些多个应用程序需要访问的功用信息库。
(3)当需要从某数据源获得数据来更新另一个数据源时，特别是它们之间的数据格式不相同时。

相对而言，数据集成比表示集成要更加灵活。但是，当业务逻辑经常发生变化时，数据集成就会面临困难。

3.控制集成
控制集成也称为功能集成或应用集成，是在业务逻辑层上对应用系统进行集成的。控制集成的集成点存于程序代码中，集成处可能只需简单实用公开的api就可以访问，当然也可能需要添加附加的代码来实现。控制集成是黑盒集成。

实现控制集成时，可以借助于远程过程调用或远程方法调用、面向消息的中间件、分布式对象技术和事务处理监控器来实现。控制集成与表示集成、数据集成相比，灵活性更高。表示集成和数据集成适用的环境下，都适用于控制集成。但是，由于控制集成是在业务逻辑层进行的，其复杂度更高一些。而且，很多系统的业务逻辑部分并没有提供API，这样，集成难度就会更大。
4.业务流程集成
业务流程集成也称为过程集成，这种集成超越了数据和系统，它由一系列基于标准的、统一数据格式的工作流组成。当进行业务流程集成时，企业必须对各种业务信息的交换进行定义、授权和管理，以便改进操作、减少成本、提高响应速度。

业务流程集成不仅要提供底层应用支撑系统之间的互连，同时要实现存在于企业内部的应用之间，本企业和其他合作伙伴之间的端到端的业务流程的管理，它包括应用集成、B2B集成、自动化业务流程管理、人工流程管理、企业门户，以及对所有应用系统和流程的管理和监控等。



DFD是SA方法中的重要工具，是表达系统内数据的流动并通过数据流描述系统功能的一种方法。DFD还可被认为是一个系统模型，在信息系统开发中，如果采用结构化方法，则一般将DFD作为需求规格说明书的一个组成部分。
在DFD中，通常会出现4种基本符号，分别是数据流、加工、数据存储和外部实体（数据源及数据终点）。数据流是具有名字和流向的数据，在DFD中用标有名字的箭头表示。加工是对数据流的变换，一般用圆圈表示。数据存储室可访问的存储信息，一般用直线段表示。外部实体室位于被建模的系统之外的信息生产者或消费者，是不能由计算机处理的成分，它们分别表明数据处理过程的数据来源及数据去向，用标有名字的方框表示。
DFD可以是一个物理系统模型，也可以是逻辑系统模型，也可以是两者的混合。
逻辑DFD和物理DFD最大的区别在于，逻辑DFD只描述了相关的组成要素，而物理DFD则会涉及到具体的实现技术。


一般来说，系统测试的主要内容包括功能测试、健壮性测试、性能测试、用户界面测试、安全性测试、安装与反安装测试等，其中，最重要的工作是进行功能测试与性能测试。功能测试主要采用黑盒测试方法；性能测试主要验证软件系统在承担一定负载的情况下所表现出来的特性是否符合客户的需要，主要指标有响应时间、吞吐量、并发用户数和资源利用率等。
功能测试的目的很简单，测试系统是否达到了用户明确提出的需求及隐含需求。
性能测试的目的是验证软件是否能够达到用户提出的性能指标，同时发现软件系统中存在的性能瓶颈，并优化软件，最后起到优化系统的目的。具体来说，包括以下四个方面：
(1)发现缺陷：软件的某些缺陷与软件性能密切相关，针对这些缺陷的测试一般需要伴随着性能测试进行。
(2)性能调优：与调试不同，性能调优并不一定针对发现的性能缺陷，也可能是为了更好地发挥系统的潜能。
(3)评估系统的能力。软件性能测试不仅需要测试软件在规定条件下是否满足性能需求，往往还需要测试能够满足性能需求的条件极限。
(4)验证稳定性和可靠性。在一定负载下测试一定的时间，是评估系统稳定性和可靠性是否满足要求的唯一方法。