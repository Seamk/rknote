用户A从ca处获取了用户B的数字证书，用户A通过CA的公钥可以确认该数字证书的有效性。
用户B的数字证书中包含了CA的签名，因此用CA的公钥克验证数字证书的有效性。

入侵系统检测的构成不包括：
(1)事件产生器：负责数据的采集，并将收集到的原始数据转换为事件，向系统的其他模块提供与事件有关的信息。
(2)事件分析器：接收事件信息并对其进行分析，判断是否为入侵行为或异常现象，
(3)事件数据库：存放有关事件的各种中间结果和最终数据的地方，可以使面向对象的数据库，也可以使一个文本文件。
(4)响应单元：根据报警信息做出各种反应，强烈的反应就是断开连接，改变文件属性等，简单的反应就是发出系统提示，引起操作人员注意。

如果用磁盘检测工具(CHKDSK,SCANDISK等)检测磁盘发现大量文件链接地址错误，表明磁盘可能被目录型病毒感染。

公民在单位任职期间所开发的软件，如是执行本职工作的结果，即针对本职工作中明确指定的开发目标所开发的，或者是从事本职工作活动所预见的结果或者自然的结果，则该软件的著作权属于该单位。

在GBT8566—2007(信息技术软件生存周期过程）标准中，软件生存周期的基本过程包括五个，分别是获取过程、供应过程、开发过程、运作过程、维护过程。其中获取过程是为获取系统、软件产品或软件服务的组织即需方而定义的活动；

与该活动属于同一过程的活动还有：启动

而获取过程的活动包括：启动、招标（标书）的准备、合同的编制和更新、对供方监督、验收和完成、合同结束、获取政策等

在计算机系统中，对构成内存的半导体存储器进行自检的方法

软件质量描述了软件的非功能属性。
主动冗余就是一种错误恢复的策略。性能是指系统的响应能力，即要经过多长时间才能对某个事件作出响应，或者在某段时间内系统所能处理事件的个数。队列调度是一种提升系统性能的常用方法。

对服务器软件系统对可用性和性能要求较高，队列调度设计策略能够提高该系统的性能。

某公司希望将位于组织内部的部分资源和功能发布到互联网上，

项目管理是保证项目成功的核心手段，在项目实施过程中具有重大作用。其中项目开发计划是项目管理的重要元素，是项目实施的基础：范围管理要确定哪些工作是项目应该做的，哪些工作不应该包含在项目中；进度管理采用科学的方法，确定项目目标，在与质量、成本目标协调的基础上实施工期目标。

假设一个I/O系统只有一个磁盘，每秒可以接收50个I/O请求，磁盘对每个I/O请求服务的平均时间是10ms，则I/O请求队列的平均长度是

服务器利用率=1/50x0.01=0.5,因此平均队列长度等于0.5。

队列长度=达到速率×平均等待时间
平均等待时间=平均服务时间X服务器利用率/(1-服务器利用率）

服务器利用率=到达速率×平均服务时间

所以，平均队列长度=服务器利用率×服务器利用率/(1-服务器利用率）

服务器利用率=50x0.01=0.5，平均队列长度为0.5*0.5(1-0.5)

a=bc
c=de(1-e)	=>a=e^2(1-e)
e=bd

推导过程：b=e/d,a=ec/d=e^2(1-e)

sql语言支持关系数据库三级模式，图中视图，基本表，存储文件分别对应：
关系p的现状：
零件号 零件名称 供应商 供应商所在地 库存量
为了解决这一问题需要将零件关系分解为：
零件1（零件号 零件名称），零件2（零件号 供应商 库存量），零件3（供应商，供应商所在地）
选项A,选项B和选项D是有损连接的，且不保持函数依赖，故分解错误，分解为A,B,D后，用户无法查询某零件由哪些供应商供应，原因是分解有损连接的，且不保持函数依赖。

分解后的关系模式零件1、零件2和零件3消除了非主属性对码的部分函数依赖，同时不存在传递依赖，故达到3NF.

设某进程的段表如下所示：

段号		基地址	段长
0		1598	600
1		486		50
2		90		100
3		1327	2988
4		1952	960

(0,128) (1,30) (3,1390)

因为0段的段长只有600，而逻辑地址(0,1597)中的1597已经越界，不能转换成逻辑地址，
而选项A和选项C都包含逻辑地址(0,1597),又因为4段的段长只有960,而逻辑地址（4，1066)中的1066己经越界，也不能转换成逻辑地址，而选项D中包含逻辑地址（4,1066)所以是错误的。

在磁盘调度管理中，应先进行移臂调度，再进行旋转调度。若磁盘移动臂位于22号柱面上，进程的请求序列如下表所示。若采用最短移臂调度算法，则系统的响应序列为：，其平均移臂距离为：

当进程请求读磁盘时，操作系统先进行移臂调度，再进行旋转调度。由于移动臂位于22号柱面上，按照最短寻道时间优先的响应柱面序列为25—18—40—45。按照旋转调度的原则分析如下：
进程在25号柱面上的响应序列为②一⑧一③，因为进程访问的是不同磁道上的不同编号的扇区，旋转调度总是让首先到达读写磁头位置下的扇区先进行传送操作。
进程在18号柱面上的响应序列为⑤一⑦一①，或⑤一①一⑦。对于①和⑦可以任选一个进行读写，因为进程访问的是不同磁道上具有相同编号的扇区，旋转调度可以任选一个读写磁头位置下的扇区进行传送操作。
进程在40号柱面上的响应序列为④一⑥；由于⑨在45号柱面上，故响应最后响应。从上面的分析中可以得出按照最短寻道时间优先的响应序列为②⑧③⑤⑦①

经济状态用宏观经济指标来表示，而这些指标需要通过计算模型估算，模型的输入信息有很多。这些信息分布于政府，金融，财税企业等众多部门，这些信息的有机集合称为宏观经济数据库。这样的数据库，采用物理集中的建设方式，不具有可操作性，而且针对同一事件，不同部门的数据都会有反映，这些数据有可能是一致的，也有可能是不一致的，因此在建设宏观经济数据库的时候，要对数据进行整合。

问题1说明中指出了该市的基础信息平台很完善，因此B公司在进行原型分析时，主要分析的不是数据库的运行平台，而是数据的生产、数据的存储、数据的消费、标准规范等情况。


问题1答案：
1.数据分布及状态详细调查（或数据梳理）。
2.各政府部门业务流程以及信息系统使用情况调查。
3.统一的数据标准规范研究。
4.指标计算模型研究，确定各个指标的输入数据。
5.提出数据管理（采集，存储，使用、维护等）工作流程方案。
6.获取有关部门宏观经济数据的具体应用需求。


“物理分散，逻辑集中”的建设思路，因此未来宏观经济数据库时一个分布式数据库系统。除了数据交换机制外，是否需要建设一个集中的数据库？

对于“物理分散，逻辑集中”的数据库，在进行逻辑集中的时候，要对数据进行整合，消除数据的不一致性，而且宏观经济数据库的应用没有实时性要求，为便于计算模型获得口径一致的输入数据，应该建设一个集中的数据库。

1.输入参数的时间戳不一致，或者时间断口经不一致。
2.数据不符合统一的标准，或者数据标准不一致（如投资主体的代码在不同的系统中不一致）。
3.数据来源单位的数据没有及时更新，或者不全。
4.存在无效数据，如某个投资主体有误或不存在。


需要建设一个集中的数据库作为核心数据库。主要理由：
1.数据分布广，同一数据类或数据项存在信息冗余和不一致的情况，应用前需要对比和清洗，整理后的数据应存放于核心数据库。2.宏观经济信息的实时性要求不高，以集中的统一的核心数据库为基础，提供经济信息服务，形成的经济指标更加科学。

指标差别大，主要是因为数据的不一致性造成的，产生不一致性的原因可能包括数据的时间戳，标准等。问题3答案：

1.输入参数的时间戳不一致，或者时间段口径不一致。
2.数据不符合统一的标准，或者数据标准不一致（如投资主体的代码在不同的系统中不一致）。
3.数据来源单位的数据没有及时更新，或者不全。
4.存在无效数据，如某个投资主体有误或不存在。

而航空设备的基本特点就是要求设备工作的实体行为应该

可信计算组织的信任链采用了一种链式的信任测量模型，即由RTM（可信测量根）->BIOS->OSLoader->OS构成了一个串行链。由于采用了一种迭代计算哈希值的方式，即将现值和新值相连，再计算哈希值并作为新的完整性度量值存储起来。

链式信任链具有如下缺点：信任链越长，信任损失的可能性就越大。在链中加入或删除一个部件，PCR的值需要重新计算，很麻烦。信任链中的软件部件可能会更新

它将可信测量根置入可信平台模块内部NVRAM(Non-Valatile Random Access Memory,非易失性随机访问存储器)，在信任链中增加了数据恢复功能，并将信任链延伸到应用。与可信计算组织的链式信任链相比，该模型具有如下特点：可信测量根被保护，安全性更高；


可信计算的基本思想是：首先是在计算机系统中建立一个信任根，再建立一条信任链，从信任根开始，经过硬件平台和操作系统，再到应用。一级测量认证一级，一级信任一级，从而把这种信任扩展到整个计算机系统。
可信计算组织的信任链采用了一种链式的信任测量模型，即由RTM（可信测量根）——>BIOS->OSLoader->OS构成一个串行链。由于采用了一种迭代计算哈希值的方式，即将现值与新值相连，再计算哈希值并作为新的完整行度量值存储起来
链式信任链具有如下特点：信任链越长，信任损失的可能性就越大。在链中加入或删除一个部件，PCR的值需要重新计算，很麻烦。信任链中的软件部件可能会更新，而PCR的值也得重新计算，这样一来部件更新工作很麻烦。


带数据恢复星型模型的特点：
(1)可信测量根被保护，安全性更高；
(2)具有数据恢复功能，安全性更高；
(3)都是一级测量，没有多级信任传递，信任损失少；


交叉编译器是嵌入式软件开发必备的基础工具软件之一。

编译器自身的可信性主要是指其编译过程的正确性、安全性和可靠性。一般认为，通过形式化验证的系统具有较高的可信性，可将形式化方法用于编译器本身。通过在传统编译器操作的基础上加入代码安全性加强机制、代码可信性炎症机制及可执行代码保护机制等三种机制，来保证变异所产生代码的可信性。

1.代码安全性加强机制：该机制主要用于识别和处理程序中常见的一些安全漏洞。目前已提出许多针对程序和刹那关键安全漏洞的变异处理技术，具有代表性的如针对缓冲区溢出攻击的StackGuard方法等。
2.代码可信性验证：该机制不可能解决所有的代码

2.影响软件可维护性的因素及提高软件可维护性的主要方法
软件的可维护性是软件开发阶段的关键目标。影响软件可维护性的因素较多，设计、编码及测试中的疏忽和低劣的软件配置，缺少文档等都将对软件的可维护性产生不良影响。软件可维护性可用下面七个质量特性来衡量，及可理解性、可测试性、可修改性、可靠性、可使用性和效率。对于不同类型的维护，这七种特性的侧重点不相同。
可从下面几个方面来阐述如何提高软件的可维护性。

(1)建立明确的软件质量目标。
(2)使用先进的软件开发技术和工具。利用先进的软件开发技术能大大提高软件质量和减少软件费用。
(3)建立明确的质量保证。质量保证是指为提高软件质量所做的各种检查工作。质量保证检查是非常有效的方法，不仅在软件开发的各阶段中得到了广泛应用，而且在软件维护中也是一个非常主要的工具。为了保证可维护性，以下四类检查时非常有用的：在检查点进行检查、验收检查、周期性的维护检查和对软件报的检查。
(4)选择可维护的语言。程序设计语言的选择对维护影响很大。低级语言很难掌握，很难理解，因而很难维护。一般来说，高级语言比低级语言更容易理解，第四代语言更容易理解，容易编程，程序容易修改，改进了可维护性。
(5)改进软件的文档。软件文档时对软件功能、软件各组成部分之间的关系、程序设计策略、程序实现过程的历史数据等的说明和补充。软件文档对提高程序的可阅读性有重要作用，从而会提高软件的可维护性。


面向服务的企业应用集成技术及其应用
一、面向服务的企业应用集成技术以服务作为封装资源和业务功能的核心概念。服务从整体的角度看待系统功能的实现，使用与实现技术无关的标准化结构进行构建，并为业务带来了灵活性和敏捷性，通过松散耦合、封装和信息隐藏使重构更加容易。
面向服务的企业应用集成技术主要包含三个重要的软件层次，它们分别是基础设计层、应用结构层和业务组织层，各层的主要功能如下：
1.基础设计层
基础设计层的主要功能是能够快速有效地设计、开发以及灵活且可扩展的底层服务构件。
2.应用结构层
企业应用集成需要整合来自多个组织的异构信息系统和功能，因此需要协调并保证各种解决方案的一致性。应用结构层的主要功能正是以表示业务服务的逻辑构件为中心，集中定义服务之间的接口和服务级协定。
3.业务组织层
业务组织层的主要功能是以服务为基础提供设计、建模以及运行业务流程的集成环境。业务流程中操作的排序、选择和执行会形成流程编排，流程编排也可进一步封装为服务，响应业务事件。
三、使用面向服务的企业应用集成技术进行应用集成时可能存在的问题包括如何发现服务；如何进行服务规约，包括服务候选服务的分类与选择，服务编排，服务库的设计，等等，如何实现服务，包括将服务的实现分配到相应的服务构件中，并决定服务的实现方式。


快速应用开发在系统建模中的应用
快速应用开发(RAD)是增量型的软件开发过程模型，强调极短的开发周期。该模型是瀑布模型的一个“高速”变种，通过大量使用可复用构件，采用基于构件的建造方法加速信息系统的开发过程。如果能够及时与用户进行交流和沟通，正确地理解需求并约束项目的范围，利用这种模型可以很快创建出功能完善的信息系统。RAD依赖于广泛的用户参与、联合应用设计会议、原型化方法、集成的case工具和代码生成器。

请围绕“快速应用开发在系统建模中的应用”论题，依次从以下三个方面进行论述。
1.
2.简要分析快速应用开发方法的生命周期，并给出各个阶段的主要任务。
3.分析快速应用开发方法的目标，并结合实际项目的实施结果快速应用开发与传统的结构化开发方法相比有哪些优点和缺点。

一、简要描述所参与分析和开发的信息系统，并明确指出在其中承担的主要任务和开展的主要工作。
1.快速应用开发是一个完整的方法，生命周期包含了需求、设计、构建和验收四个阶段，和传统的软件开发生命周期各阶段相对应。
2.四个阶段的主要任务
(1)需求阶段结合了软件开发生命周期的系统规划和系统分析阶段。用户、经理和技术人员通过讨论对业务需求、项目范围、约束条件和系统需求达成一致意见。当团队成员对关键问题达成一致意见，并获得管理部门继续进行的授权时，需求计划阶段结束。
(2)设计阶段，用户与系统分析员胡想交流，并创建模型和原型来描述所有的系统过程、输入和输出。RAD组或者子组通过结合使用JAD技术和CASE工具，从而将用户需求转变成工作模型。用户设计时一个连续的、相互影响的过程，帮助用户理解、修改并最终通过满足他们需求的系统工作模型。
(3)构建阶段强调程序和应用开发任务，类似于软件开发生命周期。所不同的是，在RAD中，用户一致参与其中，并且在实际界面或报表开发出来以后仍然可以提出修改建议。
(4)验收阶段类似于传统的软件开发生命周期的实施阶段的最终任务，包括数据转换、测试、转变为新系统，以及用户培训。和传统的方法相比，整个过程是被压缩的。这样，新系统就更快地被创建、交付和投入使用。

三、分析快速应用开发方法的目标，并讨论快速应用开发方法与传统的结构化分析方法相比有哪些优点和缺点。

1.所有RAD方法的主要目标是通过用户参与系统开发的每一个阶段来缩减开发时间和费用。由于RAD是一个连续的过程，因此随着设计的进行，RAD允许开发小组迅速地做出必要的修改。当公司预算紧张时，对于发生在一个已制定好的长时期的进度表中的变化所带来的话费进行限制尤为重要。
2.和传统的结构化分析方法相比，主要优点是强调用户参与，可以尽快明确需求，降低系统开发风险，缩短系统开发周期。缺点一是RAD强调系统本身的结构，系统可能在短时间内工作得很好，但是系统的整体和长期的目标可能得不到满足。缺点二世加速开发周期可能会导致没有更多的时间提高项目质量、连贯性和设计的标准话。缺点三世并非所有应用软件都适合于使用RAD,如果一个系统难以模块化，那么建造RAD所需构建就会有问题；如果需要更高性能的指标，且该指标必须通过调整接口使其适应系统构建才能获得，使用RAD方法就有可能失败；RAD不适合技术风险很高的情况，当一个新应用要采用很多新技术或新软件要求与已有计算机程序有较高的可互操作性时，项目也可能会失败。


访问控制时策略和机制的集合，它允许对限定资源的授权访问。
1.访问控制的策略。
访问控制策略包括登录访问控制、操作权限控制、目录安全控制、属性安全控制和服务器安全控制等方面的内容。
(1)登录访问控制策略。登录访问控制为系统访问提供了第一层访问控制，它控制哪些用户能够登录系统并获取资源，控制准许用户登录时间和具体工作站点。
(2)操作权限控制策略。操作权限控制是针对可能出现的非法操作而采取的安全保护措施。用户和用户组被赋予一定的操作权限，系统管理员可以设置用户或用户组的具体权限。
(3)目录安全控制策略。系统应该允许管理员控制用户对目录、文件和设备的操作。目录安全允许用户在目录一级的操作对目录中的所有文件和子目录都有效。用户还可以进一步自行设置对子目录和文件的权限。
(4)属性安全控制策略。属性安全控制策略允许将设定的访问属性与服务器的文件、目录和设备联系起来。系统资源都应预先标出一组安全属性，用户对资源的







 








