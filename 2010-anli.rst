一、
一份需求定义文档可能是项目文档中被阅读和引用得最多的文档。应该包含以下内容：系统应该提供的功能和服务；非功能需求，包括系统的特征、特点和属性；限制系统开发或者系统运行必须遵守的约束条件；系统必须连接的其他系统的信息。

系统所有者和用户使用需求定义文档来确认需求以及任何可能产生的变化，并作为验收的依据；系统工程分析人员、设计人员和构造人员使用它来理解需要什么以及处理需求变更，开发用于验收系统的测试用例；项目经理使用它作为制定项目计划、处理变更及验收的依据。


二、
2.需要建设一个集中的数据库作为核心数据库。主要理由：
1.数据分布广，同一数据类或数据项存在信息冗余和不一致的情况，应用前需要比对和清洗，整理后的数据应存放于核心数据库。
2.宏观经济信息的实时性要求不高，以集中的统一的核心数据库为基础，提供经济信息服务，形成的经济指标更加科学。

3.
(1)输入参数的时间戳不一致，或者时间段口径不一致。
(2)数据不符合统一的标准，或者数据标准不一致
(3)数据来源单位的数据没有及时更新，或者不全。
(4)存在无效数据，如某个投资主体有误或者不存在。

某互联网销售性·

请结合数据仓库和联邦数据库集成方案各自的特点，简要说明专家组采用王工提出的集成方案的原因。
数据仓库集成是把多种来源的数据集中在一起，建立数据仓库，所有数据都驻留在单个数据库服务器上，配置大型处理器和存储容量。数据仓库主要用于决策支持，在数据处理过程中强调分析。其特点是：1.集成的数据；2.面向主题；3.数据相对稳定；4包含历史信息。但是此种集成方法中需要将数据源转换为数据仓库中的语义转换为数据仓库中的语义，而且需要定期的数据复制和数据更新。数据源往往指的是数据库系统。
联邦数据库集成是吧多个数据库系统联合在一起，构成“联邦数据库系统”，数据库之间通过接口查询，互相通信，数据分布在不同地方的计算机或数据库服务器上，通过网络连接。其特点是：1.联邦数据库提供集成的数据格式，对用户提供统一的访问，屏蔽了各个数据库的复杂性和分布情况，简化了开发数据库查询和对数据统一理解的工作。这种分布式的数据集成，更加符合应用系统的实际情况。2异构数据库不仅仅是数据库系统，通过中间件，可以扩展到传感器，文件和应用程序等。
两种方式都需要将数据源中的数据语义转换为统一数据语义，这种转换往往存在不确定性。


其基本的步骤是：
(1)分析页面，确定其页面中的数据模式。制定数据挖掘的特征和提取规则，编写特定的页面分析和数据提取程序。
(2)抓取页面，通过爬虫技术获取对应的网页，将远端的页面下载到本地进行存储，为后续数据提取做准备；
(3)特征提取与处理，获取相应数据，依据的原则是分析页面阶段所形成的特征和提取规则。
(4)数据清洗，根据规则进行判断，抛出异常数据。
(5)数据转换，根据预先定义好的语义映射关系，将数据转换为统一格式。


试题五、
某电子商务公司的主要业务是书籍、服装、家电和日用品的在线销售。
请从系统的可用性、可伸缩性和应用特点三个方面说明公司为何没有采用王工提出的方法。

为了解决上述问题，采用高性能的主机系统是可行的。但是，除了价格昂贵、可扩展性差以外，这种主机系统在很多情况下也不能同时处理上百万个并发的请求。因为高速主机系统只是对于复杂单一任务和有限的并发处理显得高性能，而Internet中的Web应用绝大多数处理是简单任务、高强度并发处理。因此，即便有大量资金投入，采用高性能、高价格的主机系统，也不能满足Web应用的需要。
王工提出的方案是采用高性能的主机系统实现系统升级。
（1）从可用性角度看，采用高性能的主机系统很难实现系统的冗余机制，当发生故障后会导致整个系统会失去响应能力，从而无法保证系统的高可用性；	
（2）从可伸缩性角度看，采用高性能的主机系统，升级服务器的成本与获得的相应能力不成比例，整个系统的可扩展性较差；
（3）从应用特点来看，Internet中的Web应用绝大多数是简单任务、高强度的并发处理，而主机系统知识对于复杂单一任务和有限的并发处理具有高性能，不能同时处理大量的并发请求。因此，公司没有采用王工的方案。

负载均衡通常分为传输层负载均衡和应用层负载均衡两类。请基于这种分类方式，说明基于DNS的负载均衡方法和基于HTTP重定向服务器的负载均衡方法分别属于哪类负载均衡方法，并用200字以内的文字说明这两种方法实现负载均衡的方式。

基于DNS的负载均衡属于传输层负载均衡技术，其主要原理是在DNS服务器中为同一主机名配置多个地址，在应答DNS查询时，DNS服务器对每个查询将以DNS文件中主机记录的IP地址按顺序返回不同的解析结果，将客户端的访问引导到不同的节点上去，使得不同的客户端访问不同的节点，从而达到负载均衡的目的。
基于HTTP重定向服务器的负载均衡属于应用层负载均衡技术，其主要原理是服务器使用HTTP重定向指令，将一个客户端重新路由到另一个位置。服务器返回一个重定向响应，而不是返回请求的对象。客户端确认新地址然后重发请求，从而达到负载均衡的目的。

